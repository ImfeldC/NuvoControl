
Dieses Readme-File enthält einige Informationen zu der NuvoControl Solution.

1) Integration in Stream Deck
-----------------------------
Um mit dem Stream Deck OSC Befehle abzusetzen verwenden wir das Plugin: https://github.com/shells-dw/StreamDeck-OSC

Einmal installiert, könenn beliebig viele Kommandos zum Deck hinzugefügt werden.
Bei 'IP-Adress' und 'Port' die Adresse und Port vom Server eingeben (Z.B. 192.168.1.119 und 8000).
Unter OSC Message das OSC Kommando eingeben, z.B. /NuvoControl/Zone2/Status
Als Wert wird ein Integer/Dezimal verwendet; 0 um die Zone abzuschalten bzw. 1 um die Zone einzuschalten.


2) Anschluss der NuVo Box via RS232
-----------------------------------
Da die meisten PCs heute keinen RS232 Anschluss mehr haben, kann die NuVo Box nicht mehr direkt an den Laptop oder PC angeschlossen werden.
Zudem steht die NuvO Box örtlich in einem anderen Zimmer als der PC, somit ist auch deshalb kein direkter Anschluss möglich.

Ich habe die NuVo Box via einem Comm-Server 58211 von W&T anbgeschlossen: https://www.wut.de/e-58211-ww-dade-000.php
Trotz dem solzen Alter von beinahe 25 Jahren konnte ich noch einen Firmware Update machen: V1.33 (vom 04.08.2006) https://www.wut.de/e-58211-14-inde-000.php
Mittels 'Virtuelle COM-Ports für Windows' (https://www.wut.de/e-00102-ww-dade-000.php#Revisionlist) kann der Comm-Server via COM1 an den PC angeschlossen werden. Für die Applikation sieht die serielle Schnittstelle wir eine lokale Schnittstelle aus.
Einmal aufgesetzt kann der NuVoControl Server via COM1 auf die NuVo Box zugrefifen.

Wenn der Comm-Server 58211 mall nicht erreicht werden kann (ev. weil eine aktive Verbindung nicht sauber geschlossen wurde), kann er mittels telnet zurückgesetzt werden.
Starte telnet (telnet 192.168.1.119 1111), wähle 2 (SETUP System) und dann 5 (Reset). Dies setzt den Comm-Server zurück.

3) NuVo Products - End of Life Announcement
-------------------------------------------
Thank you for your interest in Nuvo, As of 2022 we have discontinued the majority of Nuvo’s product line but encourage you to explore this page to discover resources and how we plan to support your Nuvo products. 
For more information, click the button below for frequently asked questions about Nuvo products, support and our warranty policies.
Siehe https://www.legrand.us/nuvo


4) For Test Purpose, use "QUEUE"
--------------------------------
For test purpose you can use "QUEUE" (as name for the serial port); this opens a connection to a message queue. This allows to use the NuVo simulator 'NuvoControl.Server.Simulator.exe' to test the NoVoControl server.
This requires to install the 'MSMQ' on all systems which shall be used for testing.
Specifiy "QUEUE" instead of "COM1" to connect to this (test) channel.


5) Implement SeriLog support
----------------------------
Homepage: Getting Started - https://github.com/serilog/serilog/wiki/Getting-Started
$ dotnet add package Serilog
$ dotnet add package Serilog.Sinks.Console

This requires that logging is called properly.
Do not use String.Fomat when calling logging, method:
    Log(LogLevel.All, String.Format("**** {0} started. *******", strStartMessage));
Pass-in instead the parametrs, this ensures that Serilog can properly store them.
    Log(LogLevel.All, "**** {0} started. *******", strStartMessage);

Theres is a "in-build" console logger, which is switched-off per default. It can be enabled by set command line option "-v" (for verbose).


6) Docker Support
-----------------
To build NuvControl use: dotnet publish -c Release -o Docker\out
This creates in sub-folder Docker\out the whole NuvoControl, that it can be uploaded to the docker image.

One Dockerfile was based on a prepared build on host machine. Create this build with the following command:
 C:\NuvoControl 2024\NuvoControl\NuvoControl> dotnet publish -c Release -o Docker\out
Once the build is available in the 'out' folder continue, with the steps below.

To create a docker image, use: docker build -t nuvo-control .
After that you can find the image 'nuvo-control' with docker images.

A list of .NET SDK docker images can be found here: https://hub.docker.com/_/microsoft-dotnet-sdk/

With 'docker run -it --rm nuvo-control-win powershell' you can start the docker image to open a powershell prompt.
Once the prompt is opened, you can start with '.\App\NuvoControl.Server.WebConsole.exe -p COM1 -r 700 -l 1' the NuvoControl web console.

If the application is running on docker is shown on startup; check for 'Docker=True'
See also EnvironmentHelper.isRunningInDocker() for more details.

Problem sharing COM1!
---------------------
Trying to share teh COM1 port, was not working:
docker run --isolation=process --device="class/86E0D1E0-8089-11D0-9CE4-08003E301F73" --rm nuvo-control-win powershell
-> docker: Error response from daemon: hcs::CreateComputeSystem a4d516b556d2af0778a20468975c2d33e45eb0be4d203d53fdc8bcc64ac72691: The container operating system does not match the host operating system.
(see also https://learn.microsoft.com/en-us/virtualization/windowscontainers/deploy-containers/hardware-devices-in-containers)
I was not able to fix this!


CI / 18-Mar-2024
